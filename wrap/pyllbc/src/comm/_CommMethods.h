/**
 *@file		_CommMethods.h
 *@author	Longwei Lai<lailongwei@126.com>
 *@date		<auto generate code, not tag date>
 *@version	1.0
 *
 *@brief	Auto generate by script tools, do not modify this file!!
 */

#ifndef __PYLLBC_AUTOGEN__COMMMETHODS_H__
#define __PYLLBC_AUTOGEN__COMMMETHODS_H__

#include "pyllbc/common/LibHeader.h"
#include "src/comm/_Timer.h"
#include "src/comm/_Codec.h"
#include "src/comm/_ObjCoder.h"
#include "src/comm/_PacketHeaderDesc.h"
#include "src/comm/_Service.h"
#include "src/comm/_Protocol.h"
#include "src/comm/_PacketHeaderPartDesc.h"
#include "src/comm/_Packet.h"

class pyllbc_CommMethods{
public:
    pyllbc_CommMethods()
    {
        Packet_GetHeaderPartAsFloat.ml_name = "Packet_GetHeaderPartAsFloat";
        Packet_GetHeaderPartAsFloat.ml_meth = (PyCFunction)_pyllbc_Packet_GetHeaderPartAsFloat;
        Packet_GetHeaderPartAsFloat.ml_flags = METH_VARARGS;
        Packet_GetHeaderPartAsFloat.ml_doc = "pyllbc library method/function";
        PacketHeaderPartDesc_IsLenPart.ml_name = "PacketHeaderPartDesc_IsLenPart";
        PacketHeaderPartDesc_IsLenPart.ml_meth = (PyCFunction)_pyllbc_PacketHeaderPartDesc_IsLenPart;
        PacketHeaderPartDesc_IsLenPart.ml_flags = METH_VARARGS;
        PacketHeaderPartDesc_IsLenPart.ml_doc = "pyllbc library method/function";
        Packet_GetHeaderPartAsUInt8.ml_name = "Packet_GetHeaderPartAsUInt8";
        Packet_GetHeaderPartAsUInt8.ml_meth = (PyCFunction)_pyllbc_Packet_GetHeaderPartAsUInt8;
        Packet_GetHeaderPartAsUInt8.ml_flags = METH_VARARGS;
        Packet_GetHeaderPartAsUInt8.ml_doc = "pyllbc library method/function";
        PyTimerGetTimerId.ml_name = "PyTimerGetTimerId";
        PyTimerGetTimerId.ml_meth = (PyCFunction)_pyllbc_PyTimerGetTimerId;
        PyTimerGetTimerId.ml_flags = METH_VARARGS;
        PyTimerGetTimerId.ml_doc = "pyllbc library method/function";
        PacketHeaderDesc_Del.ml_name = "PacketHeaderDesc_Del";
        PacketHeaderDesc_Del.ml_meth = (PyCFunction)_pyllbc_PacketHeaderDesc_Del;
        PacketHeaderDesc_Del.ml_flags = METH_VARARGS;
        PacketHeaderDesc_Del.ml_doc = "pyllbc library method/function";
        GetServiceTypeStr.ml_name = "GetServiceTypeStr";
        GetServiceTypeStr.ml_meth = (PyCFunction)_pyllbc_GetServiceTypeStr;
        GetServiceTypeStr.ml_flags = METH_VARARGS;
        GetServiceTypeStr.ml_doc = "pyllbc library method/function";
        Packet_SetHeaderPartAsSInt8.ml_name = "Packet_SetHeaderPartAsSInt8";
        Packet_SetHeaderPartAsSInt8.ml_meth = (PyCFunction)_pyllbc_Packet_SetHeaderPartAsSInt8;
        Packet_SetHeaderPartAsSInt8.ml_flags = METH_VARARGS;
        Packet_SetHeaderPartAsSInt8.ml_doc = "pyllbc library method/function";
        PacketHeaderPartDesc_SetSerialNo.ml_name = "PacketHeaderPartDesc_SetSerialNo";
        PacketHeaderPartDesc_SetSerialNo.ml_meth = (PyCFunction)_pyllbc_PacketHeaderPartDesc_SetSerialNo;
        PacketHeaderPartDesc_SetSerialNo.ml_flags = METH_VARARGS;
        PacketHeaderPartDesc_SetSerialNo.ml_doc = "pyllbc library method/function";
        Packet_GetHeaderPartAsUint64.ml_name = "Packet_GetHeaderPartAsUint64";
        Packet_GetHeaderPartAsUint64.ml_meth = (PyCFunction)_pyllbc_Packet_GetHeaderPartAsUint64;
        Packet_GetHeaderPartAsUint64.ml_flags = METH_VARARGS;
        Packet_GetHeaderPartAsUint64.ml_doc = "pyllbc library method/function";
        PyTimerCancel.ml_name = "PyTimerCancel";
        PyTimerCancel.ml_meth = (PyCFunction)_pyllbc_PyTimerCancel;
        PyTimerCancel.ml_flags = METH_VARARGS;
        PyTimerCancel.ml_doc = "pyllbc library method/function";
        SetServiceCodec.ml_name = "SetServiceCodec";
        SetServiceCodec.ml_meth = (PyCFunction)_pyllbc_SetServiceCodec;
        SetServiceCodec.ml_flags = METH_VARARGS;
        SetServiceCodec.ml_doc = "pyllbc library method/function";
        PacketHeaderPartDesc_GetPartLen.ml_name = "PacketHeaderPartDesc_GetPartLen";
        PacketHeaderPartDesc_GetPartLen.ml_meth = (PyCFunction)_pyllbc_PacketHeaderPartDesc_GetPartLen;
        PacketHeaderPartDesc_GetPartLen.ml_flags = METH_VARARGS;
        PacketHeaderPartDesc_GetPartLen.ml_doc = "pyllbc library method/function";
        PacketHeaderDesc_GetServiceIdPartLen.ml_name = "PacketHeaderDesc_GetServiceIdPartLen";
        PacketHeaderDesc_GetServiceIdPartLen.ml_meth = (PyCFunction)_pyllbc_PacketHeaderDesc_GetServiceIdPartLen;
        PacketHeaderDesc_GetServiceIdPartLen.ml_flags = METH_VARARGS;
        PacketHeaderDesc_GetServiceIdPartLen.ml_doc = "pyllbc library method/function";
        PacketHeaderDesc_IsHasOpcodePart.ml_name = "PacketHeaderDesc_IsHasOpcodePart";
        PacketHeaderDesc_IsHasOpcodePart.ml_meth = (PyCFunction)_pyllbc_PacketHeaderDesc_IsHasOpcodePart;
        PacketHeaderDesc_IsHasOpcodePart.ml_flags = METH_VARARGS;
        PacketHeaderDesc_IsHasOpcodePart.ml_doc = "pyllbc library method/function";
        decode.ml_name = "decode";
        decode.ml_meth = (PyCFunction)_pyllbc_decode;
        decode.ml_flags = METH_VARARGS;
        decode.ml_doc = "pyllbc library method/function";
        SetServiceFPS.ml_name = "SetServiceFPS";
        SetServiceFPS.ml_meth = (PyCFunction)_pyllbc_SetServiceFPS;
        SetServiceFPS.ml_flags = METH_VARARGS;
        SetServiceFPS.ml_doc = "pyllbc library method/function";
        PyTimerGetPeriod.ml_name = "PyTimerGetPeriod";
        PyTimerGetPeriod.ml_meth = (PyCFunction)_pyllbc_PyTimerGetPeriod;
        PyTimerGetPeriod.ml_flags = METH_VARARGS;
        PyTimerGetPeriod.ml_doc = "pyllbc library method/function";
        PacketHeaderPartDesc_New.ml_name = "PacketHeaderPartDesc_New";
        PacketHeaderPartDesc_New.ml_meth = (PyCFunction)_pyllbc_PacketHeaderPartDesc_New;
        PacketHeaderPartDesc_New.ml_flags = METH_VARARGS;
        PacketHeaderPartDesc_New.ml_doc = "pyllbc library method/function";
        ClearHookedErrors.ml_name = "ClearHookedErrors";
        ClearHookedErrors.ml_meth = (PyCFunction)_pyllbc_ClearHookedErrors;
        ClearHookedErrors.ml_flags = METH_VARARGS;
        ClearHookedErrors.ml_doc = "pyllbc library method/function";
        Packet_SetHeaderPartAsUInt32.ml_name = "Packet_SetHeaderPartAsUInt32";
        Packet_SetHeaderPartAsUInt32.ml_meth = (PyCFunction)_pyllbc_Packet_SetHeaderPartAsUInt32;
        Packet_SetHeaderPartAsUInt32.ml_flags = METH_VARARGS;
        Packet_SetHeaderPartAsUInt32.ml_doc = "pyllbc library method/function";
        PacketHeaderPartDesc_IsFlagsPart.ml_name = "PacketHeaderPartDesc_IsFlagsPart";
        PacketHeaderPartDesc_IsFlagsPart.ml_meth = (PyCFunction)_pyllbc_PacketHeaderPartDesc_IsFlagsPart;
        PacketHeaderPartDesc_IsFlagsPart.ml_flags = METH_VARARGS;
        PacketHeaderPartDesc_IsFlagsPart.ml_doc = "pyllbc library method/function";
        InstallErrHooker.ml_name = "InstallErrHooker";
        InstallErrHooker.ml_meth = (PyCFunction)_pyllbc_InstallErrHooker;
        InstallErrHooker.ml_flags = METH_VARARGS;
        InstallErrHooker.ml_doc = "pyllbc library method/function";
        Broadcast.ml_name = "Broadcast";
        Broadcast.ml_meth = (PyCFunction)_pyllbc_Broadcast;
        Broadcast.ml_flags = METH_VARARGS;
        Broadcast.ml_doc = "pyllbc library method/function";
        PacketHeaderDesc_AddPart.ml_name = "PacketHeaderDesc_AddPart";
        PacketHeaderDesc_AddPart.ml_meth = (PyCFunction)_pyllbc_PacketHeaderDesc_AddPart;
        PacketHeaderDesc_AddPart.ml_flags = METH_VARARGS;
        PacketHeaderDesc_AddPart.ml_doc = "pyllbc library method/function";
        encode.ml_name = "encode";
        encode.ml_meth = (PyCFunction)_pyllbc_encode;
        encode.ml_flags = METH_VARARGS;
        encode.ml_doc = "pyllbc library method/function";
        Packet_SetHeaderPartAsSInt64.ml_name = "Packet_SetHeaderPartAsSInt64";
        Packet_SetHeaderPartAsSInt64.ml_meth = (PyCFunction)_pyllbc_Packet_SetHeaderPartAsSInt64;
        Packet_SetHeaderPartAsSInt64.ml_flags = METH_VARARGS;
        Packet_SetHeaderPartAsSInt64.ml_doc = "pyllbc library method/function";
        Post.ml_name = "Post";
        Post.ml_meth = (PyCFunction)_pyllbc_Post;
        Post.ml_flags = METH_VARARGS;
        Post.ml_doc = "pyllbc library method/function";
        PyTimerSetIgnoredDeadRef.ml_name = "PyTimerSetIgnoredDeadRef";
        PyTimerSetIgnoredDeadRef.ml_meth = (PyCFunction)_pyllbc_PyTimerSetIgnoredDeadRef;
        PyTimerSetIgnoredDeadRef.ml_flags = METH_VARARGS;
        PyTimerSetIgnoredDeadRef.ml_doc = "pyllbc library method/function";
        UninstallErrHooker.ml_name = "UninstallErrHooker";
        UninstallErrHooker.ml_meth = (PyCFunction)_pyllbc_UninstallErrHooker;
        UninstallErrHooker.ml_flags = METH_VARARGS;
        UninstallErrHooker.ml_doc = "pyllbc library method/function";
        ServiceMainLoop.ml_name = "ServiceMainLoop";
        ServiceMainLoop.ml_meth = (PyCFunction)_pyllbc_ServiceMainLoop;
        ServiceMainLoop.ml_flags = METH_VARARGS;
        ServiceMainLoop.ml_doc = "pyllbc library method/function";
        PacketHeaderDesc_GetOpcodePartLen.ml_name = "PacketHeaderDesc_GetOpcodePartLen";
        PacketHeaderDesc_GetOpcodePartLen.ml_meth = (PyCFunction)_pyllbc_PacketHeaderDesc_GetOpcodePartLen;
        PacketHeaderDesc_GetOpcodePartLen.ml_flags = METH_VARARGS;
        PacketHeaderDesc_GetOpcodePartLen.ml_doc = "pyllbc library method/function";
        PacketHeaderDesc_IsHasServiceIdPart.ml_name = "PacketHeaderDesc_IsHasServiceIdPart";
        PacketHeaderDesc_IsHasServiceIdPart.ml_meth = (PyCFunction)_pyllbc_PacketHeaderDesc_IsHasServiceIdPart;
        PacketHeaderDesc_IsHasServiceIdPart.ml_flags = METH_VARARGS;
        PacketHeaderDesc_IsHasServiceIdPart.ml_doc = "pyllbc library method/function";
        StopService.ml_name = "StopService";
        StopService.ml_meth = (PyCFunction)_pyllbc_StopService;
        StopService.ml_flags = METH_VARARGS;
        StopService.ml_doc = "pyllbc library method/function";
        PacketHeaderDesc_GetStatusPartLen.ml_name = "PacketHeaderDesc_GetStatusPartLen";
        PacketHeaderDesc_GetStatusPartLen.ml_meth = (PyCFunction)_pyllbc_PacketHeaderDesc_GetStatusPartLen;
        PacketHeaderDesc_GetStatusPartLen.ml_flags = METH_VARARGS;
        PacketHeaderDesc_GetStatusPartLen.ml_doc = "pyllbc library method/function";
        Packet_GetHeaderPartAsStr.ml_name = "Packet_GetHeaderPartAsStr";
        Packet_GetHeaderPartAsStr.ml_meth = (PyCFunction)_pyllbc_Packet_GetHeaderPartAsStr;
        Packet_GetHeaderPartAsStr.ml_flags = METH_VARARGS;
        Packet_GetHeaderPartAsStr.ml_doc = "pyllbc library method/function";
        Packet_SetHeaderPartAsStr.ml_name = "Packet_SetHeaderPartAsStr";
        Packet_SetHeaderPartAsStr.ml_meth = (PyCFunction)_pyllbc_Packet_SetHeaderPartAsStr;
        Packet_SetHeaderPartAsStr.ml_flags = METH_VARARGS;
        Packet_SetHeaderPartAsStr.ml_doc = "pyllbc library method/function";
        PacketHeaderPartDesc_IsServiceIdPart.ml_name = "PacketHeaderPartDesc_IsServiceIdPart";
        PacketHeaderPartDesc_IsServiceIdPart.ml_meth = (PyCFunction)_pyllbc_PacketHeaderPartDesc_IsServiceIdPart;
        PacketHeaderPartDesc_IsServiceIdPart.ml_flags = METH_VARARGS;
        PacketHeaderPartDesc_IsServiceIdPart.ml_doc = "pyllbc library method/function";
        NewPyTimer.ml_name = "NewPyTimer";
        NewPyTimer.ml_meth = (PyCFunction)_pyllbc_NewPyTimer;
        NewPyTimer.ml_flags = METH_VARARGS;
        NewPyTimer.ml_doc = "pyllbc library method/function";
        GetServiceType.ml_name = "GetServiceType";
        GetServiceType.ml_meth = (PyCFunction)_pyllbc_GetServiceType;
        GetServiceType.ml_flags = METH_VARARGS;
        GetServiceType.ml_doc = "pyllbc library method/function";
        AsyncConn.ml_name = "AsyncConn";
        AsyncConn.ml_meth = (PyCFunction)_pyllbc_AsyncConn;
        AsyncConn.ml_flags = METH_VARARGS;
        AsyncConn.ml_doc = "pyllbc library method/function";
        PacketHeaderDesc_GetServiceIdPartOffset.ml_name = "PacketHeaderDesc_GetServiceIdPartOffset";
        PacketHeaderDesc_GetServiceIdPartOffset.ml_meth = (PyCFunction)_pyllbc_PacketHeaderDesc_GetServiceIdPartOffset;
        PacketHeaderDesc_GetServiceIdPartOffset.ml_flags = METH_VARARGS;
        PacketHeaderDesc_GetServiceIdPartOffset.ml_doc = "pyllbc library method/function";
        StartService.ml_name = "StartService";
        StartService.ml_meth = (PyCFunction)_pyllbc_StartService;
        StartService.ml_flags = METH_VARARGS;
        StartService.ml_doc = "pyllbc library method/function";
        PacketHeaderPartDesc_IsStatusPart.ml_name = "PacketHeaderPartDesc_IsStatusPart";
        PacketHeaderPartDesc_IsStatusPart.ml_meth = (PyCFunction)_pyllbc_PacketHeaderPartDesc_IsStatusPart;
        PacketHeaderPartDesc_IsStatusPart.ml_flags = METH_VARARGS;
        PacketHeaderPartDesc_IsStatusPart.ml_doc = "pyllbc library method/function";
        PacketHeaderDesc_ToString.ml_name = "PacketHeaderDesc_ToString";
        PacketHeaderDesc_ToString.ml_meth = (PyCFunction)_pyllbc_PacketHeaderDesc_ToString;
        PacketHeaderDesc_ToString.ml_flags = METH_VARARGS;
        PacketHeaderDesc_ToString.ml_doc = "pyllbc library method/function";
        PacketHeaderDesc_GetFlagsPartLen.ml_name = "PacketHeaderDesc_GetFlagsPartLen";
        PacketHeaderDesc_GetFlagsPartLen.ml_meth = (PyCFunction)_pyllbc_PacketHeaderDesc_GetFlagsPartLen;
        PacketHeaderDesc_GetFlagsPartLen.ml_flags = METH_VARARGS;
        PacketHeaderDesc_GetFlagsPartLen.ml_doc = "pyllbc library method/function";
        PacketHeaderDesc_GetLenPartLen.ml_name = "PacketHeaderDesc_GetLenPartLen";
        PacketHeaderDesc_GetLenPartLen.ml_meth = (PyCFunction)_pyllbc_PacketHeaderDesc_GetLenPartLen;
        PacketHeaderDesc_GetLenPartLen.ml_flags = METH_VARARGS;
        PacketHeaderDesc_GetLenPartLen.ml_doc = "pyllbc library method/function";
        Packet_GetHeaderPartAsUInt32.ml_name = "Packet_GetHeaderPartAsUInt32";
        Packet_GetHeaderPartAsUInt32.ml_meth = (PyCFunction)_pyllbc_Packet_GetHeaderPartAsUInt32;
        Packet_GetHeaderPartAsUInt32.ml_flags = METH_VARARGS;
        Packet_GetHeaderPartAsUInt32.ml_doc = "pyllbc library method/function";
        PacketHeaderPartDesc_IsValid.ml_name = "PacketHeaderPartDesc_IsValid";
        PacketHeaderPartDesc_IsValid.ml_meth = (PyCFunction)_pyllbc_PacketHeaderPartDesc_IsValid;
        PacketHeaderPartDesc_IsValid.ml_flags = METH_VARARGS;
        PacketHeaderPartDesc_IsValid.ml_doc = "pyllbc library method/function";
        SetPacketHeaderDesc.ml_name = "SetPacketHeaderDesc";
        SetPacketHeaderDesc.ml_meth = (PyCFunction)_pyllbc_SetPacketHeaderDesc;
        SetPacketHeaderDesc.ml_flags = METH_VARARGS;
        SetPacketHeaderDesc.ml_doc = "pyllbc library method/function";
        PyTimerUpdateAllTimers.ml_name = "PyTimerUpdateAllTimers";
        PyTimerUpdateAllTimers.ml_meth = (PyCFunction)_pyllbc_PyTimerUpdateAllTimers;
        PyTimerUpdateAllTimers.ml_flags = METH_VARARGS;
        PyTimerUpdateAllTimers.ml_doc = "pyllbc library method/function";
        NewService.ml_name = "NewService";
        NewService.ml_meth = (PyCFunction)_pyllbc_NewService;
        NewService.ml_flags = METH_VARARGS;
        NewService.ml_doc = "pyllbc library method/function";
        RegisterCodec.ml_name = "RegisterCodec";
        RegisterCodec.ml_meth = (PyCFunction)_pyllbc_RegisterCodec;
        RegisterCodec.ml_flags = METH_VARARGS;
        RegisterCodec.ml_doc = "pyllbc library method/function";
        PacketHeaderDesc_New.ml_name = "PacketHeaderDesc_New";
        PacketHeaderDesc_New.ml_meth = (PyCFunction)_pyllbc_PacketHeaderDesc_New;
        PacketHeaderDesc_New.ml_flags = METH_VARARGS;
        PacketHeaderDesc_New.ml_doc = "pyllbc library method/function";
        GetServiceCodec.ml_name = "GetServiceCodec";
        GetServiceCodec.ml_meth = (PyCFunction)_pyllbc_GetServiceCodec;
        GetServiceCodec.ml_flags = METH_VARARGS;
        GetServiceCodec.ml_doc = "pyllbc library method/function";
        Packet_SetHeaderPartAsUInt64.ml_name = "Packet_SetHeaderPartAsUInt64";
        Packet_SetHeaderPartAsUInt64.ml_meth = (PyCFunction)_pyllbc_Packet_SetHeaderPartAsUInt64;
        Packet_SetHeaderPartAsUInt64.ml_flags = METH_VARARGS;
        Packet_SetHeaderPartAsUInt64.ml_doc = "pyllbc library method/function";
        Connect.ml_name = "Connect";
        Connect.ml_meth = (PyCFunction)_pyllbc_Connect;
        Connect.ml_flags = METH_VARARGS;
        Connect.ml_doc = "pyllbc library method/function";
        level2str.ml_name = "level2str";
        level2str.ml_meth = (PyCFunction)_pyllbc_level2str;
        level2str.ml_flags = METH_VARARGS;
        level2str.ml_doc = "pyllbc library method/function";
        PacketHeaderPartDesc_SetIsLenIncludedSelf.ml_name = "PacketHeaderPartDesc_SetIsLenIncludedSelf";
        PacketHeaderPartDesc_SetIsLenIncludedSelf.ml_meth = (PyCFunction)_pyllbc_PacketHeaderPartDesc_SetIsLenIncludedSelf;
        PacketHeaderPartDesc_SetIsLenIncludedSelf.ml_flags = METH_VARARGS;
        PacketHeaderPartDesc_SetIsLenIncludedSelf.ml_doc = "pyllbc library method/function";
        Packet_SetHeaderPartAsSInt16.ml_name = "Packet_SetHeaderPartAsSInt16";
        Packet_SetHeaderPartAsSInt16.ml_meth = (PyCFunction)_pyllbc_Packet_SetHeaderPartAsSInt16;
        Packet_SetHeaderPartAsSInt16.ml_flags = METH_VARARGS;
        Packet_SetHeaderPartAsSInt16.ml_doc = "pyllbc library method/function";
        PacketHeaderPartDesc_IsOpcodePart.ml_name = "PacketHeaderPartDesc_IsOpcodePart";
        PacketHeaderPartDesc_IsOpcodePart.ml_meth = (PyCFunction)_pyllbc_PacketHeaderPartDesc_IsOpcodePart;
        PacketHeaderPartDesc_IsOpcodePart.ml_flags = METH_VARARGS;
        PacketHeaderPartDesc_IsOpcodePart.ml_doc = "pyllbc library method/function";
        RegisterFacade.ml_name = "RegisterFacade";
        RegisterFacade.ml_meth = (PyCFunction)_pyllbc_RegisterFacade;
        RegisterFacade.ml_flags = METH_VARARGS;
        RegisterFacade.ml_doc = "pyllbc library method/function";
        DelService.ml_name = "DelService";
        DelService.ml_meth = (PyCFunction)_pyllbc_DelService;
        DelService.ml_flags = METH_VARARGS;
        DelService.ml_doc = "pyllbc library method/function";
        Packet_GetHeaderPartAsSInt32.ml_name = "Packet_GetHeaderPartAsSInt32";
        Packet_GetHeaderPartAsSInt32.ml_meth = (PyCFunction)_pyllbc_Packet_GetHeaderPartAsSInt32;
        Packet_GetHeaderPartAsSInt32.ml_flags = METH_VARARGS;
        Packet_GetHeaderPartAsSInt32.ml_doc = "pyllbc library method/function";
        SendData.ml_name = "SendData";
        SendData.ml_meth = (PyCFunction)_pyllbc_SendData;
        SendData.ml_flags = METH_VARARGS;
        SendData.ml_doc = "pyllbc library method/function";
        RemoveSession.ml_name = "RemoveSession";
        RemoveSession.ml_meth = (PyCFunction)_pyllbc_RemoveSession;
        RemoveSession.ml_flags = METH_VARARGS;
        RemoveSession.ml_doc = "pyllbc library method/function";
        o2j.ml_name = "o2j";
        o2j.ml_meth = (PyCFunction)_pyllbc_o2j;
        o2j.ml_flags = METH_VARARGS;
        o2j.ml_doc = "pyllbc library method/function";
        PyTimerGetDueTime.ml_name = "PyTimerGetDueTime";
        PyTimerGetDueTime.ml_meth = (PyCFunction)_pyllbc_PyTimerGetDueTime;
        PyTimerGetDueTime.ml_flags = METH_VARARGS;
        PyTimerGetDueTime.ml_doc = "pyllbc library method/function";
        PacketHeaderPartDesc_SetPartLen.ml_name = "PacketHeaderPartDesc_SetPartLen";
        PacketHeaderPartDesc_SetPartLen.ml_meth = (PyCFunction)_pyllbc_PacketHeaderPartDesc_SetPartLen;
        PacketHeaderPartDesc_SetPartLen.ml_flags = METH_VARARGS;
        PacketHeaderPartDesc_SetPartLen.ml_doc = "pyllbc library method/function";
        Listen.ml_name = "Listen";
        Listen.ml_meth = (PyCFunction)_pyllbc_Listen;
        Listen.ml_flags = METH_VARARGS;
        Listen.ml_doc = "pyllbc library method/function";
        Packet_SetHeaderPartAsUInt16.ml_name = "Packet_SetHeaderPartAsUInt16";
        Packet_SetHeaderPartAsUInt16.ml_meth = (PyCFunction)_pyllbc_Packet_SetHeaderPartAsUInt16;
        Packet_SetHeaderPartAsUInt16.ml_flags = METH_VARARGS;
        Packet_SetHeaderPartAsUInt16.ml_doc = "pyllbc library method/function";
        Packet_GetHeaderPartAsSInt16.ml_name = "Packet_GetHeaderPartAsSInt16";
        Packet_GetHeaderPartAsSInt16.ml_meth = (PyCFunction)_pyllbc_Packet_GetHeaderPartAsSInt16;
        Packet_GetHeaderPartAsSInt16.ml_flags = METH_VARARGS;
        Packet_GetHeaderPartAsSInt16.ml_doc = "pyllbc library method/function";
        PacketHeaderPartDesc_SetIsServiceIdPart.ml_name = "PacketHeaderPartDesc_SetIsServiceIdPart";
        PacketHeaderPartDesc_SetIsServiceIdPart.ml_meth = (PyCFunction)_pyllbc_PacketHeaderPartDesc_SetIsServiceIdPart;
        PacketHeaderPartDesc_SetIsServiceIdPart.ml_flags = METH_VARARGS;
        PacketHeaderPartDesc_SetIsServiceIdPart.ml_doc = "pyllbc library method/function";
        PacketHeaderPartDesc_SetIsStatusPart.ml_name = "PacketHeaderPartDesc_SetIsStatusPart";
        PacketHeaderPartDesc_SetIsStatusPart.ml_meth = (PyCFunction)_pyllbc_PacketHeaderPartDesc_SetIsStatusPart;
        PacketHeaderPartDesc_SetIsStatusPart.ml_flags = METH_VARARGS;
        PacketHeaderPartDesc_SetIsStatusPart.ml_doc = "pyllbc library method/function";
        DelPyTimer.ml_name = "DelPyTimer";
        DelPyTimer.ml_meth = (PyCFunction)_pyllbc_DelPyTimer;
        DelPyTimer.ml_flags = METH_VARARGS;
        DelPyTimer.ml_doc = "pyllbc library method/function";
        Packet_GetHeaderPartAsSInt8.ml_name = "Packet_GetHeaderPartAsSInt8";
        Packet_GetHeaderPartAsSInt8.ml_meth = (PyCFunction)_pyllbc_Packet_GetHeaderPartAsSInt8;
        Packet_GetHeaderPartAsSInt8.ml_flags = METH_VARARGS;
        Packet_GetHeaderPartAsSInt8.ml_doc = "pyllbc library method/function";
        PreSubscribe.ml_name = "PreSubscribe";
        PreSubscribe.ml_meth = (PyCFunction)_pyllbc_PreSubscribe;
        PreSubscribe.ml_flags = METH_VARARGS;
        PreSubscribe.ml_doc = "pyllbc library method/function";
        PacketHeaderDesc_GetHeaderLen.ml_name = "PacketHeaderDesc_GetHeaderLen";
        PacketHeaderDesc_GetHeaderLen.ml_meth = (PyCFunction)_pyllbc_PacketHeaderDesc_GetHeaderLen;
        PacketHeaderDesc_GetHeaderLen.ml_flags = METH_VARARGS;
        PacketHeaderDesc_GetHeaderLen.ml_doc = "pyllbc library method/function";
        PacketHeaderDesc_RemovePart.ml_name = "PacketHeaderDesc_RemovePart";
        PacketHeaderDesc_RemovePart.ml_meth = (PyCFunction)_pyllbc_PacketHeaderDesc_RemovePart;
        PacketHeaderDesc_RemovePart.ml_flags = METH_VARARGS;
        PacketHeaderDesc_RemovePart.ml_doc = "pyllbc library method/function";
        Packet_SetHeaderPartAsUInt8.ml_name = "Packet_SetHeaderPartAsUInt8";
        Packet_SetHeaderPartAsUInt8.ml_meth = (PyCFunction)_pyllbc_Packet_SetHeaderPartAsUInt8;
        Packet_SetHeaderPartAsUInt8.ml_flags = METH_VARARGS;
        Packet_SetHeaderPartAsUInt8.ml_doc = "pyllbc library method/function";
        PacketHeaderDesc_GetLenPartOffset.ml_name = "PacketHeaderDesc_GetLenPartOffset";
        PacketHeaderDesc_GetLenPartOffset.ml_meth = (PyCFunction)_pyllbc_PacketHeaderDesc_GetLenPartOffset;
        PacketHeaderDesc_GetLenPartOffset.ml_flags = METH_VARARGS;
        PacketHeaderDesc_GetLenPartOffset.ml_doc = "pyllbc library method/function";
        UnifyPreSubscribe.ml_name = "UnifyPreSubscribe";
        UnifyPreSubscribe.ml_meth = (PyCFunction)_pyllbc_UnifyPreSubscribe;
        UnifyPreSubscribe.ml_flags = METH_VARARGS;
        UnifyPreSubscribe.ml_doc = "pyllbc library method/function";
        PyTimerSchedule.ml_name = "PyTimerSchedule";
        PyTimerSchedule.ml_meth = (PyCFunction)_pyllbc_PyTimerSchedule;
        PyTimerSchedule.ml_flags = METH_VARARGS;
        PyTimerSchedule.ml_doc = "pyllbc library method/function";
        PacketHeaderDesc_GetOpcodePartOffset.ml_name = "PacketHeaderDesc_GetOpcodePartOffset";
        PacketHeaderDesc_GetOpcodePartOffset.ml_meth = (PyCFunction)_pyllbc_PacketHeaderDesc_GetOpcodePartOffset;
        PacketHeaderDesc_GetOpcodePartOffset.ml_flags = METH_VARARGS;
        PacketHeaderDesc_GetOpcodePartOffset.ml_doc = "pyllbc library method/function";
        Packet_GetHeaderPartAsDouble.ml_name = "Packet_GetHeaderPartAsDouble";
        Packet_GetHeaderPartAsDouble.ml_meth = (PyCFunction)_pyllbc_Packet_GetHeaderPartAsDouble;
        Packet_GetHeaderPartAsDouble.ml_flags = METH_VARARGS;
        Packet_GetHeaderPartAsDouble.ml_doc = "pyllbc library method/function";
        PacketHeaderDesc_GetFlagsPartOffset.ml_name = "PacketHeaderDesc_GetFlagsPartOffset";
        PacketHeaderDesc_GetFlagsPartOffset.ml_meth = (PyCFunction)_pyllbc_PacketHeaderDesc_GetFlagsPartOffset;
        PacketHeaderDesc_GetFlagsPartOffset.ml_flags = METH_VARARGS;
        PacketHeaderDesc_GetFlagsPartOffset.ml_doc = "pyllbc library method/function";
        j2o.ml_name = "j2o";
        j2o.ml_meth = (PyCFunction)_pyllbc_j2o;
        j2o.ml_flags = METH_VARARGS;
        j2o.ml_doc = "pyllbc library method/function";
        layer2str.ml_name = "layer2str";
        layer2str.ml_meth = (PyCFunction)_pyllbc_layer2str;
        layer2str.ml_flags = METH_VARARGS;
        layer2str.ml_doc = "pyllbc library method/function";
        PacketHeaderPartDesc_Del.ml_name = "PacketHeaderPartDesc_Del";
        PacketHeaderPartDesc_Del.ml_meth = (PyCFunction)_pyllbc_PacketHeaderPartDesc_Del;
        PacketHeaderPartDesc_Del.ml_flags = METH_VARARGS;
        PacketHeaderPartDesc_Del.ml_doc = "pyllbc library method/function";
        PacketHeaderPartDesc_SetIsOpcodePart.ml_name = "PacketHeaderPartDesc_SetIsOpcodePart";
        PacketHeaderPartDesc_SetIsOpcodePart.ml_meth = (PyCFunction)_pyllbc_PacketHeaderPartDesc_SetIsOpcodePart;
        PacketHeaderPartDesc_SetIsOpcodePart.ml_flags = METH_VARARGS;
        PacketHeaderPartDesc_SetIsOpcodePart.ml_doc = "pyllbc library method/function";
        PacketHeaderPartDesc_SetIsLenPart.ml_name = "PacketHeaderPartDesc_SetIsLenPart";
        PacketHeaderPartDesc_SetIsLenPart.ml_meth = (PyCFunction)_pyllbc_PacketHeaderPartDesc_SetIsLenPart;
        PacketHeaderPartDesc_SetIsLenPart.ml_flags = METH_VARARGS;
        PacketHeaderPartDesc_SetIsLenPart.ml_doc = "pyllbc library method/function";
        Multicast.ml_name = "Multicast";
        Multicast.ml_meth = (PyCFunction)_pyllbc_Multicast;
        Multicast.ml_flags = METH_VARARGS;
        Multicast.ml_doc = "pyllbc library method/function";
        Packet_SetHeaderPartAsSInt32.ml_name = "Packet_SetHeaderPartAsSInt32";
        Packet_SetHeaderPartAsSInt32.ml_meth = (PyCFunction)_pyllbc_Packet_SetHeaderPartAsSInt32;
        Packet_SetHeaderPartAsSInt32.ml_flags = METH_VARARGS;
        Packet_SetHeaderPartAsSInt32.ml_doc = "pyllbc library method/function";
        PacketHeaderDesc_IsHasFlagsPart.ml_name = "PacketHeaderDesc_IsHasFlagsPart";
        PacketHeaderDesc_IsHasFlagsPart.ml_meth = (PyCFunction)_pyllbc_PacketHeaderDesc_IsHasFlagsPart;
        PacketHeaderDesc_IsHasFlagsPart.ml_flags = METH_VARARGS;
        PacketHeaderDesc_IsHasFlagsPart.ml_doc = "pyllbc library method/function";
        PacketHeaderPartDesc_SetIsFlagsPart.ml_name = "PacketHeaderPartDesc_SetIsFlagsPart";
        PacketHeaderPartDesc_SetIsFlagsPart.ml_meth = (PyCFunction)_pyllbc_PacketHeaderPartDesc_SetIsFlagsPart;
        PacketHeaderPartDesc_SetIsFlagsPart.ml_flags = METH_VARARGS;
        PacketHeaderPartDesc_SetIsFlagsPart.ml_doc = "pyllbc library method/function";
        PacketHeaderDesc_GetLenPartIncludedLen.ml_name = "PacketHeaderDesc_GetLenPartIncludedLen";
        PacketHeaderDesc_GetLenPartIncludedLen.ml_meth = (PyCFunction)_pyllbc_PacketHeaderDesc_GetLenPartIncludedLen;
        PacketHeaderDesc_GetLenPartIncludedLen.ml_flags = METH_VARARGS;
        PacketHeaderDesc_GetLenPartIncludedLen.ml_doc = "pyllbc library method/function";
        PacketHeaderPartDesc_IsLenIncludedSelf.ml_name = "PacketHeaderPartDesc_IsLenIncludedSelf";
        PacketHeaderPartDesc_IsLenIncludedSelf.ml_meth = (PyCFunction)_pyllbc_PacketHeaderPartDesc_IsLenIncludedSelf;
        PacketHeaderPartDesc_IsLenIncludedSelf.ml_flags = METH_VARARGS;
        PacketHeaderPartDesc_IsLenIncludedSelf.ml_doc = "pyllbc library method/function";
        Packet_GetHeaderPartAsSInt64.ml_name = "Packet_GetHeaderPartAsSInt64";
        Packet_GetHeaderPartAsSInt64.ml_meth = (PyCFunction)_pyllbc_Packet_GetHeaderPartAsSInt64;
        Packet_GetHeaderPartAsSInt64.ml_flags = METH_VARARGS;
        Packet_GetHeaderPartAsSInt64.ml_doc = "pyllbc library method/function";
        GetServiceFPS.ml_name = "GetServiceFPS";
        GetServiceFPS.ml_meth = (PyCFunction)_pyllbc_GetServiceFPS;
        GetServiceFPS.ml_flags = METH_VARARGS;
        GetServiceFPS.ml_doc = "pyllbc library method/function";
        Packet_SetHeaderPartAsFloat.ml_name = "Packet_SetHeaderPartAsFloat";
        Packet_SetHeaderPartAsFloat.ml_meth = (PyCFunction)_pyllbc_Packet_SetHeaderPartAsFloat;
        Packet_SetHeaderPartAsFloat.ml_flags = METH_VARARGS;
        Packet_SetHeaderPartAsFloat.ml_doc = "pyllbc library method/function";
        Packet_GetHeaderPartAsUInt16.ml_name = "Packet_GetHeaderPartAsUInt16";
        Packet_GetHeaderPartAsUInt16.ml_meth = (PyCFunction)_pyllbc_Packet_GetHeaderPartAsUInt16;
        Packet_GetHeaderPartAsUInt16.ml_flags = METH_VARARGS;
        Packet_GetHeaderPartAsUInt16.ml_doc = "pyllbc library method/function";
        SuppressServiceCoderNotFoundWarning.ml_name = "SuppressServiceCoderNotFoundWarning";
        SuppressServiceCoderNotFoundWarning.ml_meth = (PyCFunction)_pyllbc_SuppressServiceCoderNotFoundWarning;
        SuppressServiceCoderNotFoundWarning.ml_flags = METH_VARARGS;
        SuppressServiceCoderNotFoundWarning.ml_doc = "pyllbc library method/function";
        PyTimerIsIgnoredDeadRef.ml_name = "PyTimerIsIgnoredDeadRef";
        PyTimerIsIgnoredDeadRef.ml_meth = (PyCFunction)_pyllbc_PyTimerIsIgnoredDeadRef;
        PyTimerIsIgnoredDeadRef.ml_flags = METH_VARARGS;
        PyTimerIsIgnoredDeadRef.ml_doc = "pyllbc library method/function";
        PyTimerIsScheduling.ml_name = "PyTimerIsScheduling";
        PyTimerIsScheduling.ml_meth = (PyCFunction)_pyllbc_PyTimerIsScheduling;
        PyTimerIsScheduling.ml_flags = METH_VARARGS;
        PyTimerIsScheduling.ml_doc = "pyllbc library method/function";
        PacketHeaderPartDesc_GetSerialNo.ml_name = "PacketHeaderPartDesc_GetSerialNo";
        PacketHeaderPartDesc_GetSerialNo.ml_meth = (PyCFunction)_pyllbc_PacketHeaderPartDesc_GetSerialNo;
        PacketHeaderPartDesc_GetSerialNo.ml_flags = METH_VARARGS;
        PacketHeaderPartDesc_GetSerialNo.ml_doc = "pyllbc library method/function";
        PacketHeaderDesc_IsHasStatusPart.ml_name = "PacketHeaderDesc_IsHasStatusPart";
        PacketHeaderDesc_IsHasStatusPart.ml_meth = (PyCFunction)_pyllbc_PacketHeaderDesc_IsHasStatusPart;
        PacketHeaderDesc_IsHasStatusPart.ml_flags = METH_VARARGS;
        PacketHeaderDesc_IsHasStatusPart.ml_doc = "pyllbc library method/function";
        PacketHeaderDesc_GetStatusPartOffset.ml_name = "PacketHeaderDesc_GetStatusPartOffset";
        PacketHeaderDesc_GetStatusPartOffset.ml_meth = (PyCFunction)_pyllbc_PacketHeaderDesc_GetStatusPartOffset;
        PacketHeaderDesc_GetStatusPartOffset.ml_flags = METH_VARARGS;
        PacketHeaderDesc_GetStatusPartOffset.ml_doc = "pyllbc library method/function";
        GetServiceFrameInterval.ml_name = "GetServiceFrameInterval";
        GetServiceFrameInterval.ml_meth = (PyCFunction)_pyllbc_GetServiceFrameInterval;
        GetServiceFrameInterval.ml_flags = METH_VARARGS;
        GetServiceFrameInterval.ml_doc = "pyllbc library method/function";
        Subscribe.ml_name = "Subscribe";
        Subscribe.ml_meth = (PyCFunction)_pyllbc_Subscribe;
        Subscribe.ml_flags = METH_VARARGS;
        Subscribe.ml_doc = "pyllbc library method/function";
        PacketHeaderDesc_GetLenPartNotIncludedLen.ml_name = "PacketHeaderDesc_GetLenPartNotIncludedLen";
        PacketHeaderDesc_GetLenPartNotIncludedLen.ml_meth = (PyCFunction)_pyllbc_PacketHeaderDesc_GetLenPartNotIncludedLen;
        PacketHeaderDesc_GetLenPartNotIncludedLen.ml_flags = METH_VARARGS;
        PacketHeaderDesc_GetLenPartNotIncludedLen.ml_doc = "pyllbc library method/function";
        Packet_SetHeaderPartAsBytes.ml_name = "Packet_SetHeaderPartAsBytes";
        Packet_SetHeaderPartAsBytes.ml_meth = (PyCFunction)_pyllbc_Packet_SetHeaderPartAsBytes;
        Packet_SetHeaderPartAsBytes.ml_flags = METH_VARARGS;
        Packet_SetHeaderPartAsBytes.ml_doc = "pyllbc library method/function";
        PacketHeaderPartDesc_ToString.ml_name = "PacketHeaderPartDesc_ToString";
        PacketHeaderPartDesc_ToString.ml_meth = (PyCFunction)_pyllbc_PacketHeaderPartDesc_ToString;
        PacketHeaderPartDesc_ToString.ml_flags = METH_VARARGS;
        PacketHeaderPartDesc_ToString.ml_doc = "pyllbc library method/function";
        Packet_SetHeaderPartAsDouble.ml_name = "Packet_SetHeaderPartAsDouble";
        Packet_SetHeaderPartAsDouble.ml_meth = (PyCFunction)_pyllbc_Packet_SetHeaderPartAsDouble;
        Packet_SetHeaderPartAsDouble.ml_flags = METH_VARARGS;
        Packet_SetHeaderPartAsDouble.ml_doc = "pyllbc library method/function";
    }

public:
    ::PyMethodDef Packet_GetHeaderPartAsFloat;
    ::PyMethodDef PacketHeaderPartDesc_IsLenPart;
    ::PyMethodDef Packet_GetHeaderPartAsUInt8;
    ::PyMethodDef PyTimerGetTimerId;
    ::PyMethodDef PacketHeaderDesc_Del;
    ::PyMethodDef GetServiceTypeStr;
    ::PyMethodDef Packet_SetHeaderPartAsSInt8;
    ::PyMethodDef PacketHeaderPartDesc_SetSerialNo;
    ::PyMethodDef Packet_GetHeaderPartAsUint64;
    ::PyMethodDef PyTimerCancel;
    ::PyMethodDef SetServiceCodec;
    ::PyMethodDef PacketHeaderPartDesc_GetPartLen;
    ::PyMethodDef PacketHeaderDesc_GetServiceIdPartLen;
    ::PyMethodDef PacketHeaderDesc_IsHasOpcodePart;
    ::PyMethodDef decode;
    ::PyMethodDef SetServiceFPS;
    ::PyMethodDef PyTimerGetPeriod;
    ::PyMethodDef PacketHeaderPartDesc_New;
    ::PyMethodDef ClearHookedErrors;
    ::PyMethodDef Packet_SetHeaderPartAsUInt32;
    ::PyMethodDef PacketHeaderPartDesc_IsFlagsPart;
    ::PyMethodDef InstallErrHooker;
    ::PyMethodDef Broadcast;
    ::PyMethodDef PacketHeaderDesc_AddPart;
    ::PyMethodDef encode;
    ::PyMethodDef Packet_SetHeaderPartAsSInt64;
    ::PyMethodDef Post;
    ::PyMethodDef PyTimerSetIgnoredDeadRef;
    ::PyMethodDef UninstallErrHooker;
    ::PyMethodDef ServiceMainLoop;
    ::PyMethodDef PacketHeaderDesc_GetOpcodePartLen;
    ::PyMethodDef PacketHeaderDesc_IsHasServiceIdPart;
    ::PyMethodDef StopService;
    ::PyMethodDef PacketHeaderDesc_GetStatusPartLen;
    ::PyMethodDef Packet_GetHeaderPartAsStr;
    ::PyMethodDef Packet_SetHeaderPartAsStr;
    ::PyMethodDef PacketHeaderPartDesc_IsServiceIdPart;
    ::PyMethodDef NewPyTimer;
    ::PyMethodDef GetServiceType;
    ::PyMethodDef AsyncConn;
    ::PyMethodDef PacketHeaderDesc_GetServiceIdPartOffset;
    ::PyMethodDef StartService;
    ::PyMethodDef PacketHeaderPartDesc_IsStatusPart;
    ::PyMethodDef PacketHeaderDesc_ToString;
    ::PyMethodDef PacketHeaderDesc_GetFlagsPartLen;
    ::PyMethodDef PacketHeaderDesc_GetLenPartLen;
    ::PyMethodDef Packet_GetHeaderPartAsUInt32;
    ::PyMethodDef PacketHeaderPartDesc_IsValid;
    ::PyMethodDef SetPacketHeaderDesc;
    ::PyMethodDef PyTimerUpdateAllTimers;
    ::PyMethodDef NewService;
    ::PyMethodDef RegisterCodec;
    ::PyMethodDef PacketHeaderDesc_New;
    ::PyMethodDef GetServiceCodec;
    ::PyMethodDef Packet_SetHeaderPartAsUInt64;
    ::PyMethodDef Connect;
    ::PyMethodDef level2str;
    ::PyMethodDef PacketHeaderPartDesc_SetIsLenIncludedSelf;
    ::PyMethodDef Packet_SetHeaderPartAsSInt16;
    ::PyMethodDef PacketHeaderPartDesc_IsOpcodePart;
    ::PyMethodDef RegisterFacade;
    ::PyMethodDef DelService;
    ::PyMethodDef Packet_GetHeaderPartAsSInt32;
    ::PyMethodDef SendData;
    ::PyMethodDef RemoveSession;
    ::PyMethodDef o2j;
    ::PyMethodDef PyTimerGetDueTime;
    ::PyMethodDef PacketHeaderPartDesc_SetPartLen;
    ::PyMethodDef Listen;
    ::PyMethodDef Packet_SetHeaderPartAsUInt16;
    ::PyMethodDef Packet_GetHeaderPartAsSInt16;
    ::PyMethodDef PacketHeaderPartDesc_SetIsServiceIdPart;
    ::PyMethodDef PacketHeaderPartDesc_SetIsStatusPart;
    ::PyMethodDef DelPyTimer;
    ::PyMethodDef Packet_GetHeaderPartAsSInt8;
    ::PyMethodDef PreSubscribe;
    ::PyMethodDef PacketHeaderDesc_GetHeaderLen;
    ::PyMethodDef PacketHeaderDesc_RemovePart;
    ::PyMethodDef Packet_SetHeaderPartAsUInt8;
    ::PyMethodDef PacketHeaderDesc_GetLenPartOffset;
    ::PyMethodDef UnifyPreSubscribe;
    ::PyMethodDef PyTimerSchedule;
    ::PyMethodDef PacketHeaderDesc_GetOpcodePartOffset;
    ::PyMethodDef Packet_GetHeaderPartAsDouble;
    ::PyMethodDef PacketHeaderDesc_GetFlagsPartOffset;
    ::PyMethodDef j2o;
    ::PyMethodDef layer2str;
    ::PyMethodDef PacketHeaderPartDesc_Del;
    ::PyMethodDef PacketHeaderPartDesc_SetIsOpcodePart;
    ::PyMethodDef PacketHeaderPartDesc_SetIsLenPart;
    ::PyMethodDef Multicast;
    ::PyMethodDef Packet_SetHeaderPartAsSInt32;
    ::PyMethodDef PacketHeaderDesc_IsHasFlagsPart;
    ::PyMethodDef PacketHeaderPartDesc_SetIsFlagsPart;
    ::PyMethodDef PacketHeaderDesc_GetLenPartIncludedLen;
    ::PyMethodDef PacketHeaderPartDesc_IsLenIncludedSelf;
    ::PyMethodDef Packet_GetHeaderPartAsSInt64;
    ::PyMethodDef GetServiceFPS;
    ::PyMethodDef Packet_SetHeaderPartAsFloat;
    ::PyMethodDef Packet_GetHeaderPartAsUInt16;
    ::PyMethodDef SuppressServiceCoderNotFoundWarning;
    ::PyMethodDef PyTimerIsIgnoredDeadRef;
    ::PyMethodDef PyTimerIsScheduling;
    ::PyMethodDef PacketHeaderPartDesc_GetSerialNo;
    ::PyMethodDef PacketHeaderDesc_IsHasStatusPart;
    ::PyMethodDef PacketHeaderDesc_GetStatusPartOffset;
    ::PyMethodDef GetServiceFrameInterval;
    ::PyMethodDef Subscribe;
    ::PyMethodDef PacketHeaderDesc_GetLenPartNotIncludedLen;
    ::PyMethodDef Packet_SetHeaderPartAsBytes;
    ::PyMethodDef PacketHeaderPartDesc_ToString;
    ::PyMethodDef Packet_SetHeaderPartAsDouble;
};

#define pyllbc_s_CommMethods LLBC_Singleton< ::pyllbc_CommMethods, LLBC_DummyLock>::Instance()

#endif // !__PYLLBC_AUTOGEN__COMMMETHODS_H__

