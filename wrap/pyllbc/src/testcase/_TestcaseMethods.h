// The MIT License (MIT)

// Copyright (c) 2013 lailongwei<lailongwei@126.com>
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy of 
// this software and associated documentation files (the "Software"), to deal in 
// the Software without restriction, including without limitation the rights to 
// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of 
// the Software, and to permit persons to whom the Software is furnished to do so, 
// subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all 
// copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS 
// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR 
// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER 
// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN 
// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

//!!! This file is auto generated by script tool, do not modify it!!!

#ifndef __PYLLBC_AUTOGEN_TESTCASE__TESTCASEMETHODS_H__
#define __PYLLBC_AUTOGEN_TESTCASE__TESTCASEMETHODS_H__

#include "pyllbc/common/LibHeader.h"
#include "pyllbc/common/Macro.h"
#include "src/testcase/_TestCase.h"

class pyllbc_TestcaseMethods
{
public:
    pyllbc_TestcaseMethods()
    {
        DelTestCase.ml_name = "DelTestCase";
        DelTestCase.ml_meth = (PyCFunction)_pyllbc_DelTestCase;
        DelTestCase.ml_flags = METH_VARARGS;
        DelTestCase.ml_doc = "pyllbc library method/function";
        RunTestCase.ml_name = "RunTestCase";
        RunTestCase.ml_meth = (PyCFunction)_pyllbc_RunTestCase;
        RunTestCase.ml_flags = METH_VARARGS;
        RunTestCase.ml_doc = "pyllbc library method/function";
        GetTestCaseName.ml_name = "GetTestCaseName";
        GetTestCaseName.ml_meth = (PyCFunction)_pyllbc_GetTestCaseName;
        GetTestCaseName.ml_flags = METH_VARARGS;
        GetTestCaseName.ml_doc = "pyllbc library method/function";
        NewTestCase.ml_name = "NewTestCase";
        NewTestCase.ml_meth = (PyCFunction)_pyllbc_NewTestCase;
        NewTestCase.ml_flags = METH_VARARGS;
        NewTestCase.ml_doc = "pyllbc library method/function";
        SetTestCaseName.ml_name = "SetTestCaseName";
        SetTestCaseName.ml_meth = (PyCFunction)_pyllbc_SetTestCaseName;
        SetTestCaseName.ml_flags = METH_VARARGS;
        SetTestCaseName.ml_doc = "pyllbc library method/function";
    }

public:
    ::PyMethodDef DelTestCase;
    ::PyMethodDef RunTestCase;
    ::PyMethodDef GetTestCaseName;
    ::PyMethodDef NewTestCase;
    ::PyMethodDef SetTestCaseName;
};

#define pyllbc_s_TestcaseMethods LLBC_Singleton< ::pyllbc_TestcaseMethods, LLBC_DummyLock>::Instance()

#endif // !__PYLLBC_AUTOGEN_TESTCASE__TESTCASEMETHODS_H__

