/**
 * @file    TimerNative.cs
 * @author  Longwei Lai<lailongwei@126.com>
 * @date    --/--/--
 * @version 1.0
 *
 * @brief   llbc library native code wrapper.
 *          auto generated by tool, do not try to modify it!
 */

using System;
using System.Runtime.InteropServices;

namespace llbc
{

    /// <summary>
    /// Wrap comm/_Timer.h file defined c functions
    /// </summary>
    internal partial class LLBCNative
    {
        [DllImport(NativeLibName, CallingConvention = CallingConvention.Cdecl)]
        public extern static IntPtr csllbc_Timer_Create(Deleg_Timer_OnTimeout timeoutDeleg,
                                                        Deleg_Timer_OnCancel cancelDeleg);

        [DllImport(NativeLibName, CallingConvention = CallingConvention.Cdecl)]
        public extern static void csllbc_Timer_Destroy(IntPtr timer);

        [DllImport(NativeLibName, CallingConvention = CallingConvention.Cdecl)]
        public extern static int csllbc_Timer_Schedule(IntPtr timer, ulong dueTime, ulong period);

        [DllImport(NativeLibName, CallingConvention = CallingConvention.Cdecl)]
        public extern static int csllbc_Timer_IsScheduling(IntPtr timer);

        [DllImport(NativeLibName, CallingConvention = CallingConvention.Cdecl)]
        public extern static void csllbc_Timer_Cancel(IntPtr timer);

        [DllImport(NativeLibName, CallingConvention = CallingConvention.Cdecl)]
        public extern static ulong csllbc_Timer_GetDueTime(IntPtr timer);

        [DllImport(NativeLibName, CallingConvention = CallingConvention.Cdecl)]
        public extern static ulong csllbc_Timer_GetPeriod(IntPtr timer);

        [DllImport(NativeLibName, CallingConvention = CallingConvention.Cdecl)]
        public extern static ulong csllbc_Timer_GetTimerId(IntPtr timer);
    }
}
