/**
 * @file    LogNative.cs
 * @author  Longwei Lai<lailongwei@126.com>
 * @date    --/--/--
 * @version 1.0
 *
 * @brief   llbc library native code wrapper.
 *          auto generated by tool, do not try to modify it!
 */

using System;
using System.Runtime.InteropServices;

namespace llbc
{

    /// <summary>
    /// Wrap core/log/_Log.h file defined c functions
    /// </summary>
    internal partial class LLBCNative
    {
        [DllImport(NativeLibName, CallingConvention = CallingConvention.Cdecl)]
        public extern static int csllbc_Log_Init(IntPtr cfgFile);

        [DllImport(NativeLibName, CallingConvention = CallingConvention.Cdecl)]
        public extern static int csllbc_Log_IsInited();

        [DllImport(NativeLibName, CallingConvention = CallingConvention.Cdecl)]
        public extern static IntPtr csllbc_Log_GetLogger(IntPtr loggerName);

        [DllImport(NativeLibName, CallingConvention = CallingConvention.Cdecl)]
        public extern static int csllbc_Log_GetLogLevel(IntPtr logger);

        [DllImport(NativeLibName, CallingConvention = CallingConvention.Cdecl)]
        public extern static int csllbc_Log_LogMsg(IntPtr logger,
                                                   IntPtr fileName,
                                                   int lineNo,
                                                   int level,
                                                   IntPtr msg,
                                                   IntPtr tag);

        [DllImport(NativeLibName, CallingConvention = CallingConvention.Cdecl)]
        public extern static void csllbc_Log_Destroy();
    }
}
